version: '3'
services:

  mysql:
    image: mysql:latest
    container_name: Twitter-MYSQL
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 181199
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"

  postgres:
    image: postgres:latest
    container_name: Twitter-POSTGRESQL
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 181199
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: Twitter-REDIS
    command: redis-server --requirepass 181199
    ports:
      - "6379:6379"
    volumes:
       - redis-data:/data

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9092 ## Your IP
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092" ## Optional
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
  elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
      container_name: elasticsearch
      environment:
        - node.name=elasticsearch
        - cluster.name=mycluster
        - discovery.type=single-node
      ports:
        - "9200:9200"
      volumes:
        - esdata:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.2
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    
      
volumes:
  mysql-data:
  redis-data:
  postgres_data:
  esdata:

# docker-compose up -d
# docker-compose down
# docker-compose ps
# docker-compose logs
# docker-compose logs -f
# docker-compose exec mysql bash
# docker-compose exec redis bash
# docker-compose exec zookeeper bash
# docker-compose exec kafka bash


# Copy this file to MAIN project folder and run docker-compose up -d